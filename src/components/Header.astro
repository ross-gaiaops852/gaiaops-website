---
---

<header class="header">
  <!-- Skip to main content link for keyboard users -->
  <a href="#main-content" class="sr-only focus:not-sr-only">Skip to main content</a>
  
  <nav class="nav" role="navigation" aria-label="Main navigation">
    <div class="nav-brand">
      <a href="/" class="brand-link">
        <img src="/images/logos/gaiaops-primary.png" alt="GaiaOps - Progressive Operational Excellence" class="brand-logo" loading="lazy" />
      </a>
    </div>
    
    <!-- Mobile Hamburger Menu Button -->
    <button 
      class="mobile-menu-toggle" 
      id="mobile-menu-toggle" 
      aria-label="Open navigation menu"
      aria-expanded="false"
      aria-controls="nav-menu"
      type="button"
    >
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </button>
    
    <!-- Desktop Navigation -->
    <div class="nav-menu" id="nav-menu">
      <div class="nav-dropdown mobile-dropdown">
        <div class="nav-dropdown-wrapper">
          <a href="/solutions" class="nav-link dropdown-main-link">Solutions</a>
          <button 
            class="dropdown-trigger dropdown-arrow" 
            id="solutions-button"
            aria-expanded="false"
            aria-haspopup="true"
            aria-controls="solutions-menu"
            tabindex="0"
            type="button"
            aria-label="Toggle Solutions menu"
          >
            <svg class="chevron-icon" width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
        </div>
        <div 
          class="dropdown-menu mobile-submenu" 
          id="solutions-menu"
          role="menu"
          aria-labelledby="solutions-button"
          hidden
        >
          <a href="/solutions/multi-party-coordination" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">
            <svg class="w-4 h-4 mr-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path>
            </svg>
            Multi-Party Coordination
          </a>
          <a href="/solutions/client-relationships" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">
            <svg class="w-4 h-4 mr-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
            </svg>
            Client Relationships
          </a>
          <a href="/solutions/resource-optimization" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">
            <svg class="w-4 h-4 mr-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4"></path>
            </svg>
            Resource Optimization
          </a>
          <a href="/solutions/quality-assurance" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">
            <svg class="w-4 h-4 mr-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
            </svg>
            Quality Assurance
          </a>
          <a href="/solutions/business-intelligence" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">
            <svg class="w-4 h-4 mr-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"></path>
            </svg>
            Business Intelligence
          </a>
          <a href="/solutions/growth-systems" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">
            <svg class="w-4 h-4 mr-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6"></path>
            </svg>
            Growth Systems
          </a>
          <a href="/solutions/strategic-advantage" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">
            <svg class="w-4 h-4 mr-2 inline-block" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
            </svg>
            Strategic Advantage
          </a>
        </div>
      </div>
      <a href="/how-we-help" class="nav-link">How We Help</a>
      <a href="/pricing" class="nav-link">Pricing</a>
      <a href="/about" class="nav-link">About</a>
      <div class="nav-dropdown mobile-dropdown">
        <div class="nav-dropdown-wrapper">
          <a href="/resources" class="nav-link dropdown-main-link">Resources</a>
          <button 
            class="dropdown-trigger dropdown-arrow" 
            id="resources-button"
            aria-expanded="false"
            aria-haspopup="true"
            aria-controls="resources-menu"
            tabindex="0"
            type="button"
            aria-label="Toggle Resources menu"
          >
            <svg class="chevron-icon" width="16" height="16" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
        </div>
        <div 
          class="dropdown-menu mobile-submenu" 
          id="resources-menu"
          role="menu"
          aria-labelledby="resources-button"
          hidden
        >
          <a href="/resources/case-studies" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">Case Studies</a>
          <a href="/resources/guides" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">Implementation Guides</a>
          <a href="/resources/reports" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">Industry Reports</a>
          <a href="/resources/blog" class="dropdown-link mobile-dropdown-link" role="menuitem" tabindex="-1">Blog</a>
        </div>
      </div>
      <a href="/contact" class="nav-link">Contact</a>
      
      <!-- Mobile CTA buttons inside menu -->
      <div class="mobile-cta">
        <button class="btn btn-secondary" onclick="alert('Assessment coming soon!')">Operational Assessment</button>
        <a href="" onclick="Calendly.initPopupWidget({url: 'https://calendly.com/ross-gaiaops/discovery-call'});return false;" class="btn btn-primary">Discovery Call</a>
      </div>
    </div>
    
    <!-- Desktop CTA -->
    <div class="nav-cta desktop-cta">
      <button class="btn btn-secondary" onclick="alert('Assessment coming soon!')">Operational Assessment</button>
      <a href="/contact" class="btn btn-primary">Discovery Call</a>
    </div>
  </nav>
</header>

<script>
  // Comprehensive keyboard navigation and accessibility
  document.addEventListener('DOMContentLoaded', function() {
    const mobileToggle = document.getElementById('mobile-menu-toggle');
    const navMenu = document.getElementById('nav-menu');
    const solutionsButton = document.getElementById('solutions-button');
    const solutionsMenu = document.getElementById('solutions-menu');
    const resourcesButton = document.getElementById('resources-button');
    const resourcesMenu = document.getElementById('resources-menu');
    
    let currentOpenDropdown = null;
    let currentFocusIndex = -1;
    let keyboardMode = false; // Track if we're in keyboard mode
    
    // Highlight current page in navigation
    function highlightCurrentPage() {
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll('.nav-link:not(.dropdown-trigger)');
      
      navLinks.forEach(link => {
        const linkPath = new URL(link.href, window.location.origin).pathname;
        if (linkPath === currentPath || (currentPath.startsWith(linkPath) && linkPath !== '/')) {
          link.classList.add('current-page');
        }
      });
      
      // Handle dropdown links in submenus
      const dropdownLinks = document.querySelectorAll('.dropdown-link');
      dropdownLinks.forEach(link => {
        const linkPath = new URL(link.href, window.location.origin).pathname;
        if (linkPath === currentPath) {
          link.classList.add('current-page');
        }
      });
    }
    
    // Call the function
    highlightCurrentPage();
    
    // Track input method to prevent unwanted focus rings
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Tab' || e.key.startsWith('Arrow') || e.key === 'Enter' || e.key === ' ') {
        keyboardMode = true;
        // Remove mouse-hover class from all dropdown triggers when keyboard is used
        document.querySelectorAll('.dropdown-trigger.mouse-hover').forEach(el => {
          el.classList.remove('mouse-hover');
        });
      }
    });
    
    document.addEventListener('mousedown', function() {
      keyboardMode = false;
    });
    
    // Mobile menu toggle functionality
    function toggleMobileMenu() {
      const isOpen = navMenu.classList.contains('active');
      const header = document.querySelector('.header');
      
      if (isOpen) {
        navMenu.classList.remove('active');
        mobileToggle.classList.remove('active');
        mobileToggle.setAttribute('aria-expanded', 'false');
        mobileToggle.setAttribute('aria-label', 'Open navigation menu');
      } else {
        navMenu.classList.add('active');
        mobileToggle.classList.add('active');
        mobileToggle.setAttribute('aria-expanded', 'true');
        mobileToggle.setAttribute('aria-label', 'Close navigation menu');
        
        // Always show header when opening mobile menu
        if (isMobileView() && header) {
          header.classList.remove('header-hidden');
          header.classList.add('header-visible');
        }
      }
    }
    
    // Check if we're in mobile view
    function isMobileView() {
      return window.innerWidth <= 768;
    }
    
    // Dropdown functionality
    function openDropdown(button, menu, focusFirst = false) {
      if (isMobileView()) {
        // Mobile dropdown toggle
        toggleMobileDropdown(button, menu);
        return;
      }
      
      // Desktop dropdown behavior
      closeAllDropdowns();
      
      menu.removeAttribute('hidden');
      menu.style.opacity = '1';
      menu.style.visibility = 'visible';
      menu.style.transform = 'translateY(0)';
      
      button.setAttribute('aria-expanded', 'true');
      currentOpenDropdown = { button, menu };
      
      // Focus first menu item only if opened via keyboard
      if (focusFirst) {
        const firstMenuItem = menu.querySelector('[role="menuitem"]');
        if (firstMenuItem) {
          firstMenuItem.focus();
          currentFocusIndex = 0;
        }
      }
    }
    
    // Mobile dropdown toggle functionality
    function toggleMobileDropdown(button, menu) {
      const isExpanded = button.getAttribute('aria-expanded') === 'true';
      
      // Clear any inline styles that might interfere
      menu.style.opacity = '';
      menu.style.visibility = '';
      menu.style.transform = '';
      
      if (isExpanded) {
        menu.setAttribute('hidden', '');
        menu.classList.remove('active');
        button.setAttribute('aria-expanded', 'false');
      } else {
        menu.removeAttribute('hidden');
        menu.classList.add('active');
        button.setAttribute('aria-expanded', 'true');
      }
    }
    
    function closeDropdown(button, menu, returnFocus = true) {
      menu.setAttribute('hidden', '');
      menu.style.opacity = '0';
      menu.style.visibility = 'hidden';
      menu.style.transform = 'translateY(-10px)';
      
      button.setAttribute('aria-expanded', 'false');
      
      // Only return focus if we're in keyboard mode or explicitly requested
      if (returnFocus && keyboardMode) {
        button.focus();
      }
      
      if (currentOpenDropdown && currentOpenDropdown.menu === menu) {
        currentOpenDropdown = null;
      }
      currentFocusIndex = -1;
    }
    
    function closeAllDropdowns(returnFocus = true) {
      if (isMobileView()) {
        // On mobile, just close the dropdowns without desktop styling
        if (solutionsMenu && solutionsButton) {
          solutionsMenu.setAttribute('hidden', '');
          solutionsMenu.classList.remove('active');
          solutionsButton.setAttribute('aria-expanded', 'false');
        }
        if (resourcesMenu && resourcesButton) {
          resourcesMenu.setAttribute('hidden', '');
          resourcesMenu.classList.remove('active');
          resourcesButton.setAttribute('aria-expanded', 'false');
        }
      } else {
        // Desktop behavior
        if (solutionsMenu && solutionsButton) {
          closeDropdown(solutionsButton, solutionsMenu, returnFocus);
        }
        if (resourcesMenu && resourcesButton) {
          closeDropdown(resourcesButton, resourcesMenu, returnFocus);
        }
      }
    }
    
    // Keyboard navigation within dropdown
    function navigateDropdown(menu, direction) {
      const menuItems = Array.from(menu.querySelectorAll('[role="menuitem"]'));
      
      if (direction === 'down') {
        currentFocusIndex = currentFocusIndex < menuItems.length - 1 ? currentFocusIndex + 1 : 0;
      } else if (direction === 'up') {
        currentFocusIndex = currentFocusIndex > 0 ? currentFocusIndex - 1 : menuItems.length - 1;
      }
      
      if (menuItems[currentFocusIndex]) {
        menuItems[currentFocusIndex].focus();
      }
    }
    
    // Mouse hover support for dropdowns (desktop only)
    function setupHoverSupport(button, menu, wrapper) {
      const dropdown = wrapper || button.parentElement;
      
      dropdown.addEventListener('mouseenter', function() {
        if (isMobileView()) return; // Skip hover on mobile
        
        keyboardMode = false; // Ensure we're in mouse mode
        button.classList.add('mouse-hover'); // Mark as mouse interaction
        openDropdown(button, menu, false); // Never focus on mouse hover
      });
      
      dropdown.addEventListener('mouseleave', function() {
        if (isMobileView()) return; // Skip hover on mobile
        
        button.classList.remove('mouse-hover'); // Remove mouse interaction marker
        // Only close if not focused via keyboard
        if (!keyboardMode && document.activeElement !== button && !menu.contains(document.activeElement)) {
          closeDropdown(button, menu, false); // Don't return focus during mouse interactions
        }
      });
    }
    
    // Event listeners
    if (mobileToggle && navMenu) {
      mobileToggle.addEventListener('click', toggleMobileMenu);
      
      // Mobile menu keyboard support
      mobileToggle.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          toggleMobileMenu();
        }
      });
    }
    
    // Solutions dropdown
    if (solutionsButton && solutionsMenu) {
      const solutionsWrapper = solutionsButton.closest('.nav-dropdown-wrapper').parentElement;
      setupHoverSupport(solutionsButton, solutionsMenu, solutionsWrapper);
      
      solutionsButton.addEventListener('click', function(e) {
        e.preventDefault(); // Prevent any default button behavior
        
        if (isMobileView()) {
          toggleMobileDropdown(solutionsButton, solutionsMenu);
        } else {
          const isOpen = solutionsButton.getAttribute('aria-expanded') === 'true';
          if (isOpen) {
            closeDropdown(solutionsButton, solutionsMenu);
          } else {
            openDropdown(solutionsButton, solutionsMenu, true);
          }
        }
      });
      
      solutionsButton.addEventListener('keydown', function(e) {
        switch(e.key) {
          case 'Enter':
          case ' ':
            e.preventDefault();
            if (isMobileView()) {
              toggleMobileDropdown(solutionsButton, solutionsMenu);
            } else {
              const isOpen = solutionsButton.getAttribute('aria-expanded') === 'true';
              if (isOpen) {
                closeDropdown(solutionsButton, solutionsMenu);
              } else {
                openDropdown(solutionsButton, solutionsMenu, true);
              }
            }
            break;
          case 'Escape':
            if (!isMobileView()) {
              closeDropdown(solutionsButton, solutionsMenu);
            }
            break;
          case 'ArrowDown':
            if (!isMobileView()) {
              e.preventDefault();
              openDropdown(solutionsButton, solutionsMenu, true);
            }
            break;
        }
      });
    }
    
    // Resources dropdown
    if (resourcesButton && resourcesMenu) {
      const resourcesWrapper = resourcesButton.closest('.nav-dropdown-wrapper').parentElement;
      setupHoverSupport(resourcesButton, resourcesMenu, resourcesWrapper);
      
      resourcesButton.addEventListener('click', function(e) {
        e.preventDefault(); // Prevent any default button behavior
        
        if (isMobileView()) {
          toggleMobileDropdown(resourcesButton, resourcesMenu);
        } else {
          const isOpen = resourcesButton.getAttribute('aria-expanded') === 'true';
          if (isOpen) {
            closeDropdown(resourcesButton, resourcesMenu);
          } else {
            openDropdown(resourcesButton, resourcesMenu, true);
          }
        }
      });
      
      resourcesButton.addEventListener('keydown', function(e) {
        switch(e.key) {
          case 'Enter':
          case ' ':
            e.preventDefault();
            if (isMobileView()) {
              toggleMobileDropdown(resourcesButton, resourcesMenu);
            } else {
              const isOpen = resourcesButton.getAttribute('aria-expanded') === 'true';
              if (isOpen) {
                closeDropdown(resourcesButton, resourcesMenu);
              } else {
                openDropdown(resourcesButton, resourcesMenu, true);
              }
            }
            break;
          case 'Escape':
            if (!isMobileView()) {
              closeDropdown(resourcesButton, resourcesMenu);
            }
            break;
          case 'ArrowDown':
            if (!isMobileView()) {
              e.preventDefault();
              openDropdown(resourcesButton, resourcesMenu, true);
            }
            break;
        }
      });
    }
    
    // Dropdown menu item keyboard navigation
    document.addEventListener('keydown', function(e) {
      if (!currentOpenDropdown) return;
      
      const menu = currentOpenDropdown.menu;
      
      switch(e.key) {
        case 'ArrowDown':
          e.preventDefault();
          navigateDropdown(menu, 'down');
          break;
        case 'ArrowUp':
          e.preventDefault();
          navigateDropdown(menu, 'up');
          break;
        case 'Escape':
          e.preventDefault();
          closeDropdown(currentOpenDropdown.button, currentOpenDropdown.menu);
          break;
        case 'Tab':
          // Allow tab to close dropdown and continue normal tab flow
          closeAllDropdowns();
          break;
      }
    });
    
    // Close dropdowns when clicking outside
    document.addEventListener('click', function(e) {
      if (!e.target.closest('.nav-dropdown')) {
        closeAllDropdowns(false); // Don't return focus when clicking outside
      }
    });
    
    // Close mobile menu when clicking on a link (but not dropdown triggers)
    const navLinks = navMenu?.querySelectorAll('.nav-link:not(.dropdown-trigger), .dropdown-link, .btn');
    navLinks?.forEach(link => {
      link.addEventListener('click', () => {
        if (navMenu.classList.contains('active')) {
          toggleMobileMenu();
        }
        closeAllDropdowns();
      });
    });
    
    // Escape key closes mobile menu
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && navMenu?.classList.contains('active')) {
        toggleMobileMenu();
      }
    });
    
    // Handle window resize to ensure proper behavior when switching between mobile/desktop
    window.addEventListener('resize', function() {
      if (currentOpenDropdown) {
        const { button, menu } = currentOpenDropdown;
        // Clear any conflicting styles when switching between mobile/desktop
        if (isMobileView()) {
          menu.style.opacity = '';
          menu.style.visibility = '';
          menu.style.transform = '';
        }
      }
    });
    
    // Mobile header hide/show on scroll functionality
    let lastScrollTop = 0;
    let ticking = false;
    
    function handleScroll() {
      if (!isMobileView()) return; // Only apply on mobile
      
      const header = document.querySelector('.header');
      const currentScroll = window.pageYOffset || document.documentElement.scrollTop;
      
      // Don't hide header if mobile menu is open
      if (navMenu && navMenu.classList.contains('active')) {
        header.classList.remove('header-hidden');
        header.classList.add('header-visible');
        lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
        ticking = false;
        return;
      }
      
      const scrollDifference = Math.abs(currentScroll - lastScrollTop);
      const scrollingDown = currentScroll > lastScrollTop;
      
      if (currentScroll <= 0) {
        // At the top of the page
        header.classList.remove('header-hidden');
        header.classList.add('header-visible');
      } else if (scrollingDown && currentScroll > 80 && scrollDifference > 5) {
        // Scrolling down & past 80px threshold with minimum scroll difference
        header.classList.remove('header-visible');
        header.classList.add('header-hidden');
      } else if (!scrollingDown && scrollDifference > 5) {
        // Scrolling up - show immediately with minimum scroll difference
        header.classList.remove('header-hidden');
        header.classList.add('header-visible');
      }
      
      lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
      ticking = false;
    }
    
    function requestTick() {
      if (!ticking) {
        requestAnimationFrame(handleScroll);
        ticking = true;
      }
    }
    
    // Add scroll listener with throttling
    window.addEventListener('scroll', requestTick);
    
    // Initialize header state
    const header = document.querySelector('.header');
    if (isMobileView()) {
      header.classList.add('header-visible');
      header.classList.remove('header-hidden');
    }
  });
</script>

<style>
.header {
  background: var(--color-white);
  border-bottom: 1px solid var(--color-light-gray);
  position: sticky;
  top: 0;
  z-index: 50;
  transition: transform 0.3s ease-in-out;
  will-change: transform;
}

/* Mobile header hide/show states - only apply on mobile */
@media (max-width: 768px) {
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    transition: transform 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    will-change: transform;
  }
  
  .header-hidden {
    transform: translateY(-100%);
  }
  
  .header-visible {
    transform: translateY(0);
  }
  
  /* Add body padding to account for fixed header */
  body {
    padding-top: 80px;
  }
}

.nav {
  max-width: var(--container-xl);
  margin: 0 auto;
  padding: var(--spacing-2) var(--spacing-2);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.brand-logo {
  height: 40px;
  width: auto;
  transition: opacity var(--transition-normal);
}

.brand-link:hover .brand-logo {
  opacity: 0.9;
}

.brand-link:focus-visible {
  outline: 2px solid var(--color-teal-primary);
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}

.nav-menu {
  display: flex;
  align-items: center;
  gap: var(--spacing-4);
}

.nav-link {
  color: var(--color-dark-gray);
  text-decoration: none;
  font-weight: var(--font-weight-medium);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-small);
  transition: color var(--transition-normal);
}

.nav-link:hover {
  color: var(--color-teal-primary);
}

.nav-link:focus-visible {
  outline: 2px solid var(--color-teal-primary);
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}

/* Active/current page styling */
.nav-link.current-page {
  color: var(--color-teal-primary);
  font-weight: var(--font-weight-semibold);
  position: relative;
}

.nav-link.current-page::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 0;
  right: 0;
  height: 2px;
  background-color: var(--color-teal-primary);
  border-radius: 1px;
}

.nav-dropdown {
  position: relative;
}

.nav-dropdown-wrapper {
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

.dropdown-main-link {
  /* Inherits nav-link styles */
}

.dropdown-arrow {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.25rem;
  border-radius: var(--radius-sm);
  transition: all var(--transition-normal);
  display: flex;
  align-items: center;
  justify-content: center;
}

.dropdown-arrow:hover {
  background-color: rgba(74, 155, 139, 0.1);
}

.dropdown-arrow:focus-visible {
  outline: 2px solid var(--color-teal-primary);
  outline-offset: 2px;
}

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  background: var(--color-white);
  border: 1px solid var(--color-light-gray);
  border-radius: var(--radius-md);
  box-shadow: var(--shadow-lg);
  padding: var(--spacing-1) 0;
  min-width: 250px;
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: all var(--transition-normal);
}

.nav-dropdown:hover .dropdown-menu,
.nav-dropdown .dropdown-menu:not([hidden]) {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}

.dropdown-link {
  display: flex;
  align-items: center;
  padding: var(--spacing-1) var(--spacing-2);
  color: var(--color-dark-gray);
  text-decoration: none;
  font-family: var(--font-family-primary);
  font-size: var(--font-size-small);
  transition: all var(--transition-normal);
}

.dropdown-link:hover {
  background-color: var(--color-off-white);
  color: var(--color-teal-primary);
}

.dropdown-link:focus-visible {
  background-color: var(--color-off-white);
  color: var(--color-teal-primary);
  outline: 2px solid var(--color-teal-primary);
  outline-offset: -2px;
}

/* Current page styling for dropdown links */
.dropdown-link.current-page {
  background-color: var(--color-teal-primary);
  color: var(--color-white);
  font-weight: var(--font-weight-semibold);
}

.dropdown-link.current-page:hover {
  background-color: var(--color-teal-primary);
  color: var(--color-white);
}

/* Prevent focus rings on dropdown menu items when opened via mouse */
.dropdown-menu [role="menuitem"]:focus:not(:focus-visible) {
  outline: none;
}

/* Only show focus rings when actually keyboard navigating */
.dropdown-menu [role="menuitem"]:focus-visible {
  background-color: var(--color-off-white);
  color: var(--color-teal-primary);
  outline: 2px solid var(--color-teal-primary);
  outline-offset: -2px;
}

/* Icon styling for dropdown links */
.dropdown-link svg {
  flex-shrink: 0;
}

.w-4 {
  width: 1rem;
}

.h-4 {
  height: 1rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.inline-block {
  display: inline-block;
}

/* Skip to main content link */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.focus\:not-sr-only:focus-visible {
  position: static;
  width: auto;
  height: auto;
  padding: 0.5rem 1rem;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
  background-color: var(--color-teal-primary);
  color: var(--color-white);
  font-weight: var(--font-weight-medium);
  text-decoration: none;
  border-radius: var(--radius-md);
  z-index: 100;
}

/* Dropdown trigger button styling */
.dropdown-trigger {
  background: none;
  border: none;
  cursor: pointer;
  padding: 0;
  font: inherit;
}

/* Prevent focus rings during mouse hover */
.dropdown-trigger.mouse-hover:focus,
.dropdown-trigger.mouse-hover:focus-visible {
  outline: none !important;
}

.nav-cta {
  display: flex;
  gap: var(--spacing-2);
}

.btn {
  padding: 10px var(--spacing-2);
  border-radius: var(--radius-md);
  font-weight: var(--font-weight-medium);
  font-family: var(--font-family-primary);
  font-size: var(--font-size-small);
  text-decoration: none;
  transition: all var(--transition-normal);
  border: none;
  cursor: pointer;
}

.btn-primary {
  background-color: var(--color-orange-accent);
  color: var(--color-white);
}

.btn-primary:hover {
  background-color: var(--color-orange-accent-hover);
  transform: translateY(-1px);
}

.btn-secondary {
  background-color: transparent;
  color: var(--color-navy-primary);
  border: 2px solid var(--color-navy-primary);
}

.btn-secondary:hover {
  background-color: var(--color-navy-primary);
  color: var(--color-white);
}

.btn:focus-visible {
  outline: 2px solid var(--color-teal-primary);
  outline-offset: 2px;
}

/* Mobile Menu Toggle Button */
.mobile-menu-toggle {
  display: none;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.75rem;
  min-width: 48px;
  min-height: 48px;
  border-radius: var(--radius-md);
  transition: background-color var(--transition-normal);
  z-index: 51;
}

.mobile-menu-toggle:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.mobile-menu-toggle:active {
  background-color: rgba(0, 0, 0, 0.1);
  transform: scale(0.98);
}

.hamburger-line {
  width: 24px;
  height: 2px;
  background-color: var(--color-dark-gray);
  margin: 3px 0;
  transition: all var(--transition-normal);
  border-radius: 2px;
}

/* Hamburger animation when active */
.mobile-menu-toggle.active .hamburger-line:nth-child(1) {
  transform: rotate(45deg) translate(5px, 5px);
}

.mobile-menu-toggle.active .hamburger-line:nth-child(2) {
  opacity: 0;
}

.mobile-menu-toggle.active .hamburger-line:nth-child(3) {
  transform: rotate(-45deg) translate(7px, -6px);
}

.mobile-menu-toggle:focus-visible {
  outline: 2px solid var(--color-teal-primary);
  outline-offset: 2px;
  border-radius: var(--radius-sm);
}

/* Mobile CTA - hidden by default */
.mobile-cta {
  display: none;
  flex-direction: column;
  gap: 1rem;
  padding: 1.5rem 0 0;
  margin-top: auto;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

.mobile-cta .btn {
  width: 100%;
  text-align: center;
  padding: 1rem;
  min-height: 48px;
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-semibold);
}

/* Desktop CTA */
.desktop-cta {
  display: flex;
}

/* Mobile Responsiveness */
@media (max-width: 768px) {
  .nav {
    padding: var(--spacing-2);
    position: relative;
  }
  
  /* Show mobile menu toggle */
  .mobile-menu-toggle {
    display: flex;
  }
  
  /* Hide desktop CTA on mobile */
  .desktop-cta {
    display: none;
  }
  
  /* Mobile menu styling */
  .nav-menu {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: var(--color-white);
    flex-direction: column;
    align-items: stretch;
    padding: 1.5rem;
    box-shadow: var(--shadow-lg);
    border-top: 1px solid var(--color-light-gray);
    gap: 0;
    opacity: 0;
    visibility: hidden;
    transform: translateY(-10px);
    transition: all var(--transition-normal);
    z-index: 50;
    max-height: calc(100vh - 80px);
    overflow-y: auto;
  }
  
  /* Show mobile menu when active */
  .nav-menu.active {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }
  
  /* Mobile menu links */
  .nav-link {
    padding: 1rem 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.08);
    text-align: left;
    font-size: var(--font-size-base);
    min-height: 48px;
    display: flex;
    align-items: center;
    transition: all var(--transition-normal);
  }
  
  .nav-link:hover {
    color: var(--color-teal-primary);
    background-color: rgba(6, 182, 212, 0.05);
    padding-left: 0.5rem;
    border-radius: var(--radius-sm);
  }
  
  /* Mobile current page styling */
  .nav-link.current-page::after {
    display: none; /* Hide desktop underline */
  }
  
  .nav-link.current-page {
    background-color: rgba(6, 182, 212, 0.1);
    border-radius: var(--radius-sm);
    margin: 0 -0.5rem;
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  /* Add tap feedback for mobile links */
  .nav-link:active {
    background-color: rgba(6, 182, 212, 0.15);
    transform: scale(0.98);
  }
  
  /* Mobile dropdown styling - Override desktop styles completely */
  .nav-menu .nav-dropdown-wrapper {
    justify-content: space-between;
    width: 100%;
  }
  
  .nav-menu .dropdown-main-link {
    flex: 1;
  }
  
  .nav-menu .dropdown-arrow {
    padding: 0.5rem;
  }
  
  .nav-menu .chevron-icon {
    transition: transform 0.2s ease;
  }
  
  .nav-menu .dropdown-arrow[aria-expanded="true"] .chevron-icon {
    transform: rotate(180deg);
  }
  
  .nav-menu .dropdown-menu.mobile-submenu {
    /* Override all desktop dropdown styles */
    position: static !important;
    top: auto !important;
    left: auto !important;
    right: auto !important;
    width: auto !important;
    min-width: auto !important;
    opacity: 0 !important;
    visibility: hidden !important;
    max-height: 0 !important;
    overflow: hidden !important;
    transform: none !important;
    box-shadow: none !important;
    border: none !important;
    background: rgba(6, 182, 212, 0.05) !important;
    margin: 0 !important;
    margin-top: 0 !important;
    border-radius: var(--radius-md) !important;
    padding: 0 !important;
    transition: all 0.3s ease !important;
  }
  
  .nav-menu .dropdown-menu.mobile-submenu.active {
    opacity: 1 !important;
    visibility: visible !important;
    max-height: 500px !important;
    padding: 0.5rem 0 !important;
    background: rgba(6, 182, 212, 0.05) !important;
    display: block !important;
  }
  
  .nav-menu .mobile-dropdown-link {
    padding: 0.75rem 1rem;
    font-size: var(--font-size-small);
    margin: 0;
    min-height: 44px;
    border-bottom: none;
  }
  
  .nav-menu .mobile-dropdown-link:hover {
    background-color: rgba(6, 182, 212, 0.1);
    padding-left: 1.5rem;
  }
  
  /* Show mobile CTA */
  .mobile-cta {
    display: flex;
  }
  
  .brand-logo {
    height: 32px;
  }
}

@media (max-width: 480px) {
  .btn {
    font-size: var(--font-size-caption);
    padding: 8px var(--spacing-2);
  }
  
  .mobile-cta .btn {
    text-align: center;
  }
}
</style>